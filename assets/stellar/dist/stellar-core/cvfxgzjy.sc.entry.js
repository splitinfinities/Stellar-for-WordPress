const t=window.StellarCore.h;class e{constructor(){this.name="web_audio_sequencer",this.autoplay=!1,this.taps=4,this.context=(()=>document.querySelector("web-audio").get_context()),this.noteTime=0,this.currentTap=0,this.totalPlayTime=0,this.custom=(()=>{})}componentDidLoad(){this.autoplay&&this.play()}schedule(){var t=this.context().currentTime;for(t-=this.startTime;this.noteTime<t+.005;)this.totalPlayTime=this.noteTime+this.startTime,0===this.currentTap&&this.iterations++,this.custom(),this.advance();this.timer=setTimeout(()=>{this.schedule()},0)}advance(){var t=60/this.tempo;this.currentTap++,this.currentTap==this.taps&&(this.currentTap=0),this.noteTime+=.25*t}async play(){this.context()||await document.querySelector("web-audio").connect_the_world(),this.iterations=0,this.startTime=this.context().currentTime+.005||.005,this.schedule()}async stop(){this.iterations=0,this.startTime=null,this.currentTap=0,clearTimeout(this.timer)}render(){return[t("button",{class:"play",onClick:()=>{this.play()}},"Play"),t("button",{class:"stop",onClick:()=>{this.stop()}},"Stop")]}static get is(){return"web-audio-sequencer"}static get encapsulation(){return"shadow"}static get properties(){return{autoplay:{type:Boolean,attr:"autoplay"},context:{state:!0},currentTap:{state:!0},custom:{type:"Any",attr:"custom"},iterations:{state:!0},name:{type:String,attr:"name"},noteTime:{state:!0},play:{method:!0},startTime:{state:!0},stop:{method:!0},taps:{type:Number,attr:"taps"},tempo:{type:Number,attr:"tempo"},timer:{state:!0},totalPlayTime:{state:!0}}}}export{e as WebAudioSequencer};