export declare class VideoInterview {
    element: HTMLElement;
    randomId: number;
    src: string;
    color: string;
    playing: boolean;
    width: number;
    height: number;
    aspectRatio: number;
    visualization: "circle" | "bars" | "wave" | "bars2";
    video: HTMLStellarVideoElement;
    io: IntersectionObserver;
    loaded: boolean;
    loading: boolean;
    seekable: boolean;
    updateFunc: Function;
    duration: number;
    current: number;
    interviewLines: any;
    visible: boolean;
    context: any;
    visualizer: HTMLWebAudioVisualizerElement;
    componentWillLoad(): void;
    componentDidLoad(): Promise<void>;
    addIntersectionObserver(): void;
    cache: WeakMap<object, any>;
    handleTimeUpdate(event: any): void;
    readonly time: number;
    handleInScreen(): Promise<void>;
    attachContext(): Promise<void>;
    handleOffScreen(): Promise<void>;
    play(): Promise<void>;
    skipTo(time: number): Promise<void>;
    pause(): Promise<void>;
    toggle(): Promise<void>;
    handleClick(): void;
    handleCurrentClick(): void;
    render(): any;
}
